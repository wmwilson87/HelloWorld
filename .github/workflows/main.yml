# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: 'windows-latest'
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: npm install
      - name: Run some JS code
        run: node testAction.js
  # This workflow contains a single job called "build"
  build1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          #echo $(date --help)
          dNow=$(date -Iseconds)
          dThen=$(date -Iseconds -d "1 minute ago")
          echo $dNow
          echo $dThen
          #vers="Accept:application/vnd.github.v3+json"
          #commits=$(curl "https://api.github.com/repos/wmwilson87/HelloWorld/commits?since=${dThen}&until=$(dNow)" -H $vers | python -c "import sys, json; print(json.load(sys.stdin))")
          ##commits=$(curl "https://api.github.com/repos/wmwilson87/HelloWorld/commits?since=${dThen}&until=$(dNow)" -H $vers)
          #[ $(jq -n "${commits}" | jq length) -eq 0 ] && echo "No recent commits found"
          #commitsSHAs=$(jq -n "${commits}" | jq -r 'map(.html_url)')
          #echo $(jq -n "${commitsSHAs}")
          #echo $(jq -n ${commits})
      
      
